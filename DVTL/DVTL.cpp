#include "headers/vector.h"

using DVTL::vector;
using DVTL::move;

int main() {
    vector<int> v1;                // конструктор по умолчанию
    vector<int> v2(5);             // конструктор с указанием размера
    vector<int> v3(3, 7);          // конструктор с указанием размера и значения

    vector<int> v5(v2);            // конструктор копирования
    vector<int> v6(DVTL::move(v3)); // конструктор перемещения

    v1 = v2;                       // оператор присваивания копированием
    v3 = move(v6);            // оператор присваивания перемещением

    // Тестирование методов работы с элементами
    v3.at(1) = 15;                  // доступ к элементу по индексу
    v3.front() = 5;                 // доступ к первому элементу
    v3.back() = 25;                 // доступ к последнему элементу

    // Тестирование методов работы с данными
    v3.reserve(10);                 // резервирование памяти
    v3.resize(5);                   // изменение размера
    v3.resize(8, 42);               // изменение размера с заполнением новых элементов
    v3.assign(3, 8);                // присваивание заданного значения заданному количеству элементов
    v3.clear();                     // очистка вектора
    v3.shrink_to_fit();             // уменьшение емкости до размера вектора

    // Тестирование методов добавления и удаления элементов
    v3.push_back(11);               // добавление элемента в конец вектора
    v3.push_back(22);
    v3.pop_back();                  // удаление последнего элемента

    return 0;
}
